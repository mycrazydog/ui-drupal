/**
 * Fetch all taxonomy term IDs from an entity object. All fields of field
 *   type 'taxonomy_term_reference' will be included.
 *
 * @param $entity_type
 *   The entity type; e.g. 'node' or 'user'.
 * @param $bundle
 *   A string indicating the bundle type of the entity.
 * @param $entity
 *   The entity to retrieve taxonomy terms from.
 * @param $keyed_by_vocabulary
 *   A boolean indicating how the return values should be organized.
 *
 * @return array
 *   If $keyed_by_vocabulary is TRUE, the term IDs and names will be grouped
 *   into sub-arrays keyed by their vocabulary machine name. If FALSE, return
 *   a basic array of term IDs.
 */
function utility_get_entity_terms($entity_type, $bundle, $entity, $keyed_by_vocabulary = TRUE) {
  $terms = array();
  // Use very lightweight field info list to find relevant fields.
  foreach (field_info_field_map() as $field_name => $field_info) {
    if ($field_info['type'] <> "taxonomy_term_reference") {
      continue;
    }
    if (array_key_exists($entity_type, $field_info['bundles'])) {
      if (in_array($bundle, $field_info['bundles'][$entity_type])) {
        if (isset($entity->{$field_name})) {
          // Collect terms from fields for return.
          $values = field_get_items($entity_type, $entity, $field_name);
          foreach ((array)$values as $tid) {
            if ($tid) {
              if ($keyed_by_vocabulary) {
                $term = taxonomy_term_load($tid['tid']);
                $terms[$term->vocabulary_machine_name][$term->tid]
                  = $term->name;
              }
              else {
                $terms[] = $tid['tid'];
              }
            }
          }
        }
      }
    }
  }
  if ($keyed_by_vocabulary) {
    return $terms;
  }
  else {
    return array_unique($terms);
  }
}
